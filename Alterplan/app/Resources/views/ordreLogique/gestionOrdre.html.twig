{#
This file is part of Alterplan. 
 
Alterplan is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. 
 
Alterplan is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. 
 
You should have received a copy of the GNU Affero General Public License along with Alterplan. If not, see <http://www.gnu.org/licenses/>.
#}

{% extends '::navigableBase.html.twig' %}

{% block title %}
    Ordre logique
{% endblock %}

{% block customCSS %}
    <link rel="stylesheet" href="{{ asset('css/dragula/dragula.css') }}" />
    <link rel="stylesheet" href="{{ asset('css/ordreLogique.css') }}" />
{% endblock %}

{% block body %}
    <div class="row">
        <div class="col s3 card">
            <div class="card-content">
                <span class="card-title">Modules</span>
                {% for module in modules %}
                    <div id="module-{{ module.idModule }}" class="flow-text valign-wrapper card-panel module clickable"
                        data-href="{{ path('formations_ordre', {'codeFormation': codeFormation, 'idModule' : module.idModule}) }}">
                        <span class="card-title">{{ module.libelle }}</span>
                    </div>
                {% endfor %}
            </div>
        </div>

        <div class="col s9 ordreContent">
            {% include ':ordreLogique:ordreModule.html.twig'%}
        </div>
    </div>
{% endblock %}

{% block customJS %}
    <script type="text/javascript" src="{{ asset('js/dragula/3.7.2/dragula.min.js') }}"></script>
    <script type="text/javascript" src="{{ asset('js/ordreLogique.js') }}"></script>
    <script type="text/javascript">
        $(document).ready(function () {

            var drake = new dragula({
                isContainer: function (el) {
                    return el.classList.contains('draggable-container');
                },
                moves: function (el, source, handle, sibling) {
                    var sourceParent = source.parentElement;
                    if (source.classList.contains('droite')) {
                        return el.classList.contains('module');
                    } else if (source.classList.contains('centre')) {
                        return el.classList.contains('groupe');
                    } else if (sourceParent.classList.contains('groupe')) {
                        return el.classList.contains('sous-groupe');
                    } else if (sourceParent.classList.contains('sous-groupe')) {
                        return el.classList.contains('module');
                    }
                },
                accepts: function (el, target, source, sibling) {
                    var targetParent = target.parentElement;
                    var ok = true;
                    if(sibling){
                        ok = !sibling.classList.contains('card-title');
                    }
                    if (target.classList.contains('centre')) {
                        ok = ok && (el.classList.contains('groupe') || el.classList.contains('module'));
                    } else if (targetParent.classList.contains('groupe')) {
                        ok = ok && ((el.classList.contains('sous-groupe') || el.classList.contains('module')) && (targetParent.dataset.nbElements < 2));
                    } else if (targetParent.classList.contains('sous-groupe')){
                        ok = ok && (el.classList.contains('module') && (targetParent.dataset.nbElements < 4));
                    }

                    return ok;
                },
                revertOnSpill: false
            });

            drake.on('drop',function (el, target, source, sibling) {
                var targetParent = target.parentElement;
                var sourceParent = source.parentElement;

                if(el.classList.contains('module')) {
                    if (target.classList.contains('centre')){
                        appendModule(target, el);
                    }else if(targetParent.classList.contains('groupe')
                        || targetParent.classList.contains('sous-groupe')){
                        appendModule(targetParent, el);
                    }
                }else if (el.classList.contains('sous-groupe')){
                    if(targetParent.classList.contains('groupe')){
                        appendSousGroupe(targetParent, el);
                    }
                }else if (el.classList.contains('groupe')){

                }

                handleRemove(sourceParent);
            });

            $('.module.clickable').each(function (index) {
               $(this).click(function () {
                   var module = $(this);
                   var selected = $('.module.selected');
                   if (selected){
                       selected.each(function (index) {
                          $(selected[index]).removeClass('selected');
                       });
                   }

                   showLoader();
                   var url = $(this).data('href');
                   $.get(url, function (data) {
                       var container = $('.ordreContent');
                       container.empty();
                       container.html(data);

                       module.addClass('selected');
                       $('#selected-module-titre').text(module.children('span').text());
                   }).fail(function () {
                       showToast('Erreur de récupération', 'error');
                   }).always(function () {
                       dismissLoader();
                   });
               });
            });
        });
    </script>
{% endblock %}