{#
This file is part of Alterplan. 
 
Alterplan is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. 
 
Alterplan is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. 
 
You should have received a copy of the GNU Affero General Public License along with Alterplan. If not, see <http://www.gnu.org/licenses/>.
#}

{% extends '::navigableBase.html.twig' %}

{% block title %}
    Ordre logique
{% endblock %}

{% block customCSS %}
    <link rel="stylesheet" href="{{ asset('css/dragula/dragula.css') }}" />
    <link rel="stylesheet" href="{{ asset('css/ordreLogique.css') }}" />
{% endblock %}

{% block body %}
    <div class="row">
        <div class="col s3 card">
            <div class="card-content">
                <span class="card-title">Modules</span>
                {% for module in modules %}
                    <div id="{{ module.idModule }}" class="flow-text valign-wrapper card-panel module clickable">
                        <span class="card-title">{{ module.libelle }}</span>
                    </div>
                {% endfor %}
            </div>
        </div>

        <div class="col s9 ordreContent">
            {% include ':ordreLogique:ordreModule.html.twig'%}
        </div>
    </div>
{% endblock %}

{% block customJS %}
    <script type="text/javascript" src="{{ asset('js/dragula/3.7.2/dragula.min.js') }}"></script>
    <script type="text/javascript" src="{{ asset('js/webReflection/document-register-element.js') }}"></script>
    <script type="text/javascript" src="{{ asset('js/ordreLogique/module.js') }}"></script>
    <script type="text/javascript" src="{{ asset('js/ordreLogique/buttonIcon.js') }}"></script>
    <script type="text/javascript" src="{{ asset('js/ordreLogique/draggableContainer.js') }}"></script>
    <script type="text/javascript" src="{{ asset('js/ordreLogique/sousGroupe.js') }}"></script>
    <script type="text/javascript" src="{{ asset('js/ordreLogique/groupe.js') }}"></script>
    <script type="text/javascript" src="{{ asset('js/ordreLogique.js') }}"></script>
    <script type="text/javascript" src="{{ asset('js/formation.js') }}"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            var ordreLogique = new OrdreLogique({{ formation|json_encode(constant('JSON_PRETTY_PRINT'))|raw }});

            $('.module.clickable').each(function (index) {
                $(this).click(function () {
                    var module = $(this);
                    ordreLogique.formation.selectModule(module.attr('id'));

                    var otherSelected = $('.module.selected');
                    if (otherSelected){
                        otherSelected.each(function (index) {
                            $(otherSelected[index]).removeClass('selected');
                        });
                    }

                    module.addClass('selected');
                    $('#selected-module-titre').text(module.text());

                    ordreLogique.createModulesDisponibles();
                    ordreLogique.createGroupesModules();
                });
            });

            var drake = new dragula({
                isContainer: function (el) {
                    return $(el).hasClass('draggable-container') || el instanceof DraggableContainer;
                },
                moves: function (el, source, handle, sibling) {
                    if (source.classList.contains('droite')) {
                        return el instanceof Module;
                    } else if (source.classList.contains('centre')) {
                        return el instanceof GroupeModule;
                    } else if (source.parentElement instanceof GroupeModule) {
                        return el instanceof SousGroupe;
                    } else if (source.parentElement instanceof SousGroupe) {
                        return el instanceof Module;
                    }
                },
                accepts: function (el, target, source, sibling) {
                    var jTarget = $(target);
                    var jSibling = $(sibling);
                    var ok = true;

                    if(jSibling){
                        ok = !jSibling.hasClass('card-title');
                    }

                    if(jTarget.hasClass('droite')){
                        ok = ok && el instanceof Module;
                    }else if (jTarget.hasClass('centre')) {
                        ok = ok && (el instanceof GroupeModule || el instanceof Module);
                    } else if (target.parentElement instanceof GroupeModule) {
                        ok = ok && ((el instanceof SousGroupe || el instanceof Module)
                            && (target.parentElement.nbElements < 2));
                    } else if (target.parentElement instanceof SousGroupe){
                        ok = ok && (el instanceof Module && (target.parentElement.nbElements < 4));
                    }

                    return ok;
                },
                revertOnSpill: false
            });

            drake.on('drop',function (el, target, source, sibling) {
                if(el instanceof Module) {
                    if (source.classList.contains('droite')){
                        ordreLogique.formation.removeModuleDisponible(el);
                    }

                    if (target.classList.contains('centre')){
                        var idGroupe = -1;
                        var groupes = target.getElementsByTagName('groupe-module');

                        for (var i = 0, len = groupes.length; i < len; i++){
                            var id = parseInt(groupes[i].identifiant);
                            if (id > idGroupe){
                                idGroupe = id;
                            }
                        }

                        var sousGroupe = ordreLogique.createSousGroupe();
                        var groupe = ordreLogique.createGroupe();
                        groupe.identifiant = ++idGroupe;

                        ordreLogique.formation.addGroupe(groupe);
                        groupe.addSousGroupe(sousGroupe);
                        sousGroupe.addModule(el);

                        if(sibling){
                            target.insertBefore(groupe, sibling);
                        }else {
                            target.appendChild(groupe);
                        }

                    }else if(target.parentElement instanceof GroupeModule){
                        var sousGroupe = ordreLogique.createSousGroupe();
                        sousGroupe.addModule(el);

                        target.parentElement.addSousGroupe(sousGroupe);

                        if (sibling){
                            target.insertBefore(sousGroupe, sibling);
                        }else {
                            target.appendChild(sousGroupe);
                        }

                    }else if(target.parentElement instanceof SousGroupe){
                        target.parentElement.addModule(el);
                        if (sibling){
                            target.insertBefore(el, sibling);
                        }else {
                            target.appendChild(el);
                        }
                    } else if (target.classList.contains('droite')){
                       ordreLogique.formation.addModuleDisponible(el);
                    }

                }else if (el instanceof SousGroupe){
                    target.parentElement.addSousGroupe(el);
                }

                ordreLogique.handleRemove(source.parentElement, el);
            });
        });
    </script>
{% endblock %}